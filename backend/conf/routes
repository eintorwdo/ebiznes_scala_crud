# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

#Auth routes
GET     /auth/provider/:provider    controllers.SocialController.authenticate(provider: String)
POST    /auth/signup                controllers.SignUpController.submit
POST    /auth/signin                controllers.SignInController.submit

# Api routes
GET     /api/categories             controllers.CategoryController.categoriesJson
POST    /api/category               controllers.CategoryController.addCategoryJson
GET     /api/category/:id           controllers.CategoryController.categoryJson(id: Int)
PUT     /api/category/:id           controllers.CategoryController.updateCategoryJson(id: Int)
GET     /api/subcategories          controllers.CategoryController.subCategoriesJson
GET     /api/subcategory/:id        controllers.CategoryController.subCategoryJson(id: Int)
POST    /api/subcategory            controllers.CategoryController.addSubCategoryJson
PUT     /api/subcategory/:id        controllers.CategoryController.updateSubCategoryJson(id: Int)
DELETE  /api/category/:id           controllers.CategoryController.deleteCategoryJson(id: Int)
DELETE  /api/subcategory/:id        controllers.CategoryController.deleteSubCategoryJson(id: Int)
GET     /api/orders                 controllers.OrderController.ordersJson
GET     /api/order/:id              controllers.OrderController.orderJson(id: Int)
POST    /api/order                  controllers.OrderController.addOrderJson
PUT     /api/order/:id              controllers.OrderController.updateOrderJson(id: Int)
DELETE  /api/order/:id              controllers.OrderController.deleteOrderJson(id: Int)
#GET     /api/orderdetails           controllers.OrderController.orderDetailsJson
GET     /api/orderdetail/:id        controllers.OrderController.orderDetailJson(id: Int)
GET     /api/deliveries             controllers.OrderController.deliveriesJson
GET     /api/delivery/:id           controllers.OrderController.deliveryJson(id: Int)
POST    /api/delivery               controllers.OrderController.addDeliveryJson
PUT     /api/delivery/:id           controllers.OrderController.updateDeliveryJson(id: Int)
GET     /api/payments               controllers.OrderController.paymentsJson
GET     /api/payment/:id            controllers.OrderController.paymentJson(id: Int)
POST    /api/payment                controllers.OrderController.addPaymentJson
PUT     /api/payment/:id            controllers.OrderController.updatePaymentJson(id: Int)
GET     /api/recproducts            controllers.ProductController.randProductsJson(cat1: Option[Int], cat2: Option[Int], cat3: Option[Int])
GET     /api/products               controllers.ProductController.productsJson(query: Option[String], category: Option[Int], subcategory: Option[Int])
GET     /api/products/ids           controllers.ProductController.productsWithIdsJson(id: List[Int])
GET     /api/product/:id            controllers.ProductController.productJson(id: Int)
POST    /api/product                controllers.ProductController.addProductJson
PUT     /api/product/:id            controllers.ProductController.updateProductJson(id: Int)
DELETE  /api/product/:id            controllers.ProductController.deleteProductJson(id: Int)
GET     /api/manufacturers          controllers.ProductController.manufacturersJson
GET     /api/manufacturer/:id       controllers.ProductController.manufacturerJson(id: Int)
POST    /api/manufacturer           controllers.ProductController.addManufacturerJson
PUT     /api/manufacturer/:id       controllers.ProductController.updateManufacturerJson(id: Int)
GET     /api/reviews                controllers.ProductController.reviewsJson
GET     /api/review/:id             controllers.ProductController.reviewJson(id: Int)
POST    /api/review                 controllers.ProductController.addReviewJson
PUT     /api/review/:id             controllers.ProductController.updateReviewJson(id: Int)
GET     /api/users                  controllers.UserController.usersJson
GET     /api/user                   controllers.UserController.getUserSecured
GET     /api/user/:id               controllers.UserController.userJson(id: String)
PUT     /api/user/:id               controllers.UserController.updateUserRole(id: String)
DELETE  /api/user/:id               controllers.UserController.deleteUser(id: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
